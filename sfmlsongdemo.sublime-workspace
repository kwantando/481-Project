{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fail_note",
				"fail_note_loc"
			],
			[
				"defa",
				"default_note_filetype_c"
			],
			[
				"fail",
				"fail_file_name_c"
			],
			[
				"notes",
				"notes_dir_c"
			],
			[
				"default_",
				"default_note_wait_c"
			],
			[
				"note",
				"num_notes_c"
			],
			[
				"num",
				"num_notes_c"
			],
			[
				"demo",
				"demo_song_file"
			],
			[
				"demo_song",
				"demo_song_file_c"
			],
			[
				"def",
				"default_note_filetype_c"
			],
			[
				"num_",
				"num_beat_seqs"
			],
			[
				"read",
				"read_beat_seqs"
			],
			[
				"med",
				"med_difficulty_c"
			],
			[
				"assert",
				"assert_interrupts_disabled"
			],
			[
				"process",
				"process_threads"
			],
			[
				"ptr_to_",
				"ptr_to_thread_ptr_v"
			],
			[
				"max",
				"max_cooks_c"
			],
			[
				"thread",
				"thread_count"
			],
			[
				"threads",
				"threads_waiting_on_lock"
			],
			[
				"threa",
				"threads_waiting_on_lock"
			],
			[
				"child",
				"children_size_c"
			],
			[
				"current",
				"current_thread"
			],
			[
				"default",
				"default_threads_c"
			],
			[
				"living_thr",
				"living_thread_lock"
			],
			[
				"track",
				"track_handled"
			],
			[
				"service",
				"service_handled"
			],
			[
				"request_ma",
				"request_max_mutex"
			],
			[
				"disk",
				"max_disk_queue"
			],
			[
				"que",
				"threads_in_queue"
			],
			[
				"in_queue",
				"in_queue_mutex"
			],
			[
				"quee",
				"in_queue_mutex"
			],
			[
				"requester",
				"requester_in_queue"
			],
			[
				"living",
				"living_thread_mutex"
			],
			[
				"output",
				"output_mutex"
			],
			[
				"clost",
				"closest_req"
			],
			[
				"file_",
				"file_name_ind_c"
			],
			[
				"unhandled",
				"unhandled_request_mutex"
			],
			[
				"unhan",
				"unhandled_request_mutex"
			],
			[
				"max_",
				"max_disk_queue"
			],
			[
				"requests_",
				"requests_mutex"
			],
			[
				"this",
				"this_threads_requests"
			],
			[
				"file",
				"file_name_ind_c"
			],
			[
				"in_",
				"in_req_num"
			],
			[
				"int",
				"intptr_t"
			],
			[
				"handle",
				"handle_requests"
			],
			[
				"total",
				"total_docs_c"
			],
			[
				"word",
				"word_num_pair"
			],
			[
				"doc",
				"doc_to_normalization"
			],
			[
				"next",
				"next_word"
			],
			[
				"words",
				"words_in_collection"
			],
			[
				"get",
				"get_int_from_xml"
			],
			[
				"edge",
				"edge_begin"
			],
			[
				"input",
				"input_file"
			],
			[
				"sink_node",
				"sink_node_val"
			],
			[
				"sink",
				"sink_node_val"
			],
			[
				"val",
				"val_pair"
			],
			[
				"node",
				"node_iter"
			],
			[
				"converg",
				"convergence_val"
			],
			[
				"initi",
				"initial_weights"
			],
			[
				"stopp",
				"stopper_str_val"
			],
			[
				"stop_",
				"stop_val_loc_c"
			],
			[
				"st",
				"stopper_loc_c"
			],
			[
				"query",
				"query_tfidf"
			],
			[
				"quer",
				"query_tfidf"
			],
			[
				"docs",
				"docs_word_appears_in"
			],
			[
				"new_",
				"new_query_words"
			],
			[
				"render",
				"renderSinglePoint"
			],
			[
				"Marker",
				"markeroptions"
			],
			[
				"sort",
				"sorting_fcn"
			],
			[
				"map",
				"passToMap"
			],
			[
				"api",
				"apicallback"
			],
			[
				"Pass",
				"passToMap"
			],
			[
				"get_st",
				"get_status_locations"
			],
			[
				"pass",
				"passToMap"
			],
			[
				"photo",
				"photo_locations"
			],
			[
				"user",
				"userID"
			],
			[
				"suc",
				"successful_Login_Process"
			],
			[
				"remove",
				"removeClass"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Source/filedata.txt",
			"settings":
			{
				"buffer_size": 137,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/victors.txt",
			"settings":
			{
				"buffer_size": 448,
				"line_ending": "Unix",
				"name": "#comments with #-symbol. fmt is start_time end_tim"
			}
		},
		{
			"file": "Source/songinfoparser.cpp",
			"settings":
			{
				"buffer_size": 1731,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/memory_handler.cpp",
			"settings":
			{
				"buffer_size": 6527,
				"line_ending": "Unix",
				"name": "#include \"memory_handler.h\""
			}
		},
		{
			"file": "Source/qdsleep.cpp",
			"settings":
			{
				"buffer_size": 294,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/memory_demo.cpp",
			"settings":
			{
				"buffer_size": 523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/Controller.cpp",
			"settings":
			{
				"buffer_size": 3647,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/song.cpp",
			"settings":
			{
				"buffer_size": 805,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"song.h\"\n#include \"Controller.h\"\n#include <SFML/System.hpp>\n#include <iostream>\n#include <fstream>\n#include <utility>\n#include <memory>\n#include <cstdlib>\n#include <exception>\n#include <cctype>\n\n\nconst char* const default_song_data_file_c = \"victors.txt\";\nconst char* const default_song_file_c = \"Victors.wav\";\nconst char easy_difficulty_c = 'E';\nconst char med_difficulty_c = 'M';\nconst char hard_difficulty_c = 'H';\n\nusing namespace std;\n//\nint main()\n{\n    ifstream songreader {default_library_file_c};\n    int num_songs;\n    vector<std::shared_ptr<Song>> songs;\n    songreader >> num_songs; \n    songs.resize(num_songs);\n    for(int i = 0; i < num_songs; i++) {\n        songs[i] = shared_ptr<Song>(new Song{songreader});\n    }\n    //the following isn't done maintainable, but this is meant\n    //as a proof of concept\n    char read_data;\n    int song_num;\n    cout << \"Please pick song 1-3.\\n\";\n    cin >> song_num;\n    song_num -= 1;\n    if(!cin) {\n        throw runtime_error{\"Error: Please give song in int format.\"};\n    }\n    cout << \"Okay. Please pick (E)asy, (M)edium, or (H)ard.\\n\";\n    while(true) {\n        cin >> read_data;\n        read_data = toupper(read_data);\n        if(read_data == easy_difficulty_c) {\n            songs[song_num]->adjust_bpm(0.125);\n        }\n        else if(read_data == med_difficulty_c) {\n            songs[song_num]->adjust_bpm(0.25);\n        }\n        else if(read_data == hard_difficulty_c) {\n            songs[song_num]->adjust_bpm(0.5);\n        }\n        else {\n            cout << \"Please select either Easy, Medium, or Hard with E, M, or H.\\n\";\n            continue;\n        }\n        break;\n    }\n    double beats_period = 1.0/ (songs[song_num]->get_bpm() / 60);\n    double next_beat = beats_period;\n    int success_beats = 0, failure_beats = 0;\n    songs[song_num]->play();\n    while(songs[song_num]->is_playing()) {\n        double cur_time = songs[song_num]->get_time().asSeconds();\n        if(cur_time >= next_beat) {\n            cerr << \"boop: \" << cur_time << \"\\n\";\n            next_beat += beats_period;\n        }\n        //if(cin.get() == 'q')\n        //    return 0;\n    }\n    cout << \"Song is over.\\n\";\n    return 0;\n}\n",
			"file": "Source/song_demo.cpp",
			"file_size": 2187,
			"file_write_time": 130687584640000000,
			"settings":
			{
				"buffer_size": 2187,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/song.h",
			"settings":
			{
				"buffer_size": 836,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/songinfoparser.h",
			"settings":
			{
				"buffer_size": 765,
				"line_ending": "Unix",
				"name": "#ifndef SONG_INFO_PARSER_H"
			}
		},
		{
			"file": "Source/memory_handler.h",
			"settings":
			{
				"buffer_size": 1661,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/qdsleep.h",
			"settings":
			{
				"buffer_size": 58,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/beat_sequence.h",
			"settings":
			{
				"buffer_size": 173,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Source/Controller.h",
			"settings":
			{
				"buffer_size": 1808,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"apckage",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"settings",
				"Preferences: Settings - User"
			],
			[
				"defa",
				"Preferences: Settings - Default"
			],
			[
				"p",
				"Preferences: Settings - User"
			],
			[
				"pa",
				"Preferences: Settings - Default"
			]
		],
		"width": 443.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/beamed/Downloads/mountain_king.out",
		"/Users/beamed/Documents/EECS481/SongDemo/Source/song.cpp",
		"/Users/beamed/Documents/EECS481/SongDemo/song.h",
		"/Users/beamed/Documents/EECS481/SongDemo/filedata.txt",
		"/Users/beamed/Documents/EECS481/SongDemo/song.cpp",
		"/Users/beamed/Documents/EECS481/SongDemo/demo.cpp",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/sampletest/disk.in4",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/thread.h",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/main.cpp",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/sampletest/disk.in3",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/sampletest/disk.in2",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/sampletest/disk.in1",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/sampletest/disk.in0",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/cvtest1.cpp",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/mutex_test1.cpp",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/test_join.cpp",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/main.cpp",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/Makefile",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/mutex_impl.h",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/thread_impl.h",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/thread_info.h",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/thread.cpp",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/thread_impl.cpp",
		"/Users/beamed/Documents/EECS482/Proj2/beamed.chpike.2/sftp-config.json",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/sftp-config.json",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/cpu.h",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421958625/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/main.cpp",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421956904/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/main.cpp",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421641812/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/main.cpp",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421888193/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/test2/disk.in8",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421623349/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/thread.h",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421615193/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/main.cpp",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421426054/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/main.cpp",
		"/Users/beamed/Library/Application Support/Sublime Text 3/Packages/User/sftp_servers/caen",
		"/var/folders/1m/fld2m2gd28s7z83vx332ygy00000gn/T/sublime-sftp-browse-1421352361/caen/afs/umich.edu/user/b/e/beamed/EECS482/Proj1/beamed.1/main.cpp",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/Makefile",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/thread.h",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/mutex.h",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/libcpu.a",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/cv.h",
		"/Users/beamed/Documents/EECS482/Proj1/beamed.1/thread.o",
		"/Users/beamed/Documents/EECS485/Proj6/index_server/Index_server.cpp",
		"/Users/beamed/Documents/EECS485/Proj6/index_server/Index_server.h",
		"/Users/beamed/Documents/EECS485/Proj6/index_server/server_main.cpp",
		"/Users/beamed/Documents/EECS485/Proj6/Pagerank.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/Indexer.cpp",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/Group48InvertedIndex.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/Normalizer.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/WordDocCount.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/DocCount.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/InvertedIndex.java",
		"/Users/beamed/Documents/EECS485/Proj6/Pagerank.cpp",
		"/Users/beamed/Documents/EECS485/Proj6/main.cpp",
		"/Users/beamed/Documents/EECS381/Project5/Agent.cpp",
		"/Users/beamed/Documents/EECS381/Project5/Agent.h",
		"/Users/beamed/Documents/EECS381/Project5/Agent_factory.h",
		"/Users/beamed/Documents/EECS381/Project5/Agent_factory.cpp",
		"/Users/beamed/Documents/EECS381/Project5/p5_main.cpp",
		"/Users/beamed/Documents/EECS485/Proj6/Index_server.h",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/Tfidf.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/group48InvertedIndex.java",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/resources/sample.txt",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/WordCount.java",
		"/Users/beamed/Documents/EECS485/Proj6/Index_server.cpp",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/stopwords.txt",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/captions",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/Indexer.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/Makefile",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/InvertedIndex.jar",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/invIndexTest.sh",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/Makefile",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/WordCount.jar",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/wordCountTest.sh",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/XmlInputFormat.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/XmlParser.java",
		"/Users/beamed/Documents/EECS485/Proj6/hadoop-example/mysrc/XOMtest.java",
		"/Users/beamed/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/beamed/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/beamed/Documents/EECS485/Proj6Scraps/main.cpp",
		"/Users/beamed/Documents/EECS485/Proj6Scraps/Pagerank.cpp",
		"/Users/beamed/Documents/EECS485/Proj6Scraps/Pagerank.h",
		"/Users/beamed/Documents/EECS485/Proj5/pagerank/Pagerank.h",
		"/Users/beamed/Documents/EECS485/Proj5/pagerank/small.net",
		"/Users/beamed/Documents/EECS485/Proj5/pagerank/Pagerank.cpp",
		"/Users/beamed/Documents/EECS485/Proj5/pagerank/main.cpp",
		"/Users/beamed/Documents/EECS485/Proj5/pagerank/large.net",
		"/Users/beamed/Documents/EECS485/Proj5/pagerank/Makefile",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/resources/captions",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/test.txt",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/Index_server.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/server_main.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/Index_server.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/indexer_main.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/stopwords.txt",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/mongoose.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/index/mongoose.c",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/Makefile",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/Indexer.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/test.txt",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/Index_server.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/mongoose.h",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/server_main.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/Indexer.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/indexer_main.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/Index_server.cpp",
		"/Users/beamed/Documents/EECS485/Proj4/pa4_ha0n7yqr529/pa4/mongoose.c",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/typeahead.js",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/style.css",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/map.js",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/index.html",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/distance.js",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/fb.js",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/main.js",
		"/Users/beamed/Documents/EECS485/Project3/pa3_ha0n7yqr529/channel.html",
		"/Users/beamed/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/beamed/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"qdsleep",
			"notes",
			"vector",
			"beat_locations",
			"interrupt_disable",
			"interrupt_enable",
			"yield",
			"guard",
			"add_new_thread",
			"process_threads",
			"remove",
			"thread_wrapper_t",
			"dead_thread",
			"new",
			"finished_threads.push_back",
			"ready_threads",
			"new",
			"broadcast",
			"living_thread",
			"disk_mutex",
			"in_queue_cv",
			"incoming_cv",
			"broadcast",
			"living_thread",
			"living_threads",
			"done",
			"thread_done",
			"threads_in_queue",
			"output_lock",
			"deque",
			"comma",
			"Indexer::",
			"Indexer",
			"column",
			"**",
			"22462",
			"25433",
			"22873",
			"state",
			"bicycle",
			"dog",
			"17th",
			"test",
			"Query_hit",
			".map(null",
			"hidespinner",
			"view.showLogin",
			"showSpinner",
			"hideSpinner",
			"tab",
			"hideSpinner",
			"view.showSpinner()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"list"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Source/filedata.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 137,
						"regions":
						{
						},
						"selection":
						[
							[
								137,
								137
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Source/victors.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 448,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"auto_name": "#comments with #-symbol. fmt is start_time end_tim",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Source/songinfoparser.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1731,
						"regions":
						{
						},
						"selection":
						[
							[
								298,
								298
							]
						],
						"settings":
						{
							"auto_name": "",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Source/memory_handler.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6527,
						"regions":
						{
						},
						"selection":
						[
							[
								5561,
								5638
							]
						],
						"settings":
						{
							"auto_name": "#include \"memory_handler.h\"",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 34.0,
						"translation.y": 2363.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Source/qdsleep.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 294,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Source/memory_demo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 523,
						"regions":
						{
						},
						"selection":
						[
							[
								372,
								372
							]
						],
						"settings":
						{
							"auto_name": "",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Source/Controller.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3647,
						"regions":
						{
						},
						"selection":
						[
							[
								3555,
								3555
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2078.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Source/song.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 805,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Source/song_demo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2187,
						"regions":
						{
						},
						"selection":
						[
							[
								41,
								41
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "Source/song.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 836,
						"regions":
						{
						},
						"selection":
						[
							[
								56,
								31
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Source/songinfoparser.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 765,
						"regions":
						{
						},
						"selection":
						[
							[
								472,
								472
							]
						],
						"settings":
						{
							"auto_name": "#ifndef SONG_INFO_PARSER_H",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Source/memory_handler.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1661,
						"regions":
						{
						},
						"selection":
						[
							[
								1100,
								1100
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Source/qdsleep.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58,
						"regions":
						{
						},
						"selection":
						[
							[
								52,
								58
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "Source/beat_sequence.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 173,
						"regions":
						{
						},
						"selection":
						[
							[
								161,
								161
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++ Starting Kit/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "Source/Controller.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1808,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 100.0
	},
	"project": "sfmlsongdemo.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Documents/EECS482/Proj2/beamed.chpike.2/proj2.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
